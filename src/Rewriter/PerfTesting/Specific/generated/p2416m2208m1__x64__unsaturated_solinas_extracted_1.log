Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.305103 s; user: 0.305106 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.186129 s; user: 0.186132 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.191123 s; user: 0.190069 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.556041 s; user: 0.556037 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.398113 s; user: 0.398117 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.415408 s; user: 0.415406 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 1.519754 s; user: 1.519757 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 1.193682 s; user: 1.193670 s
Testing UnsaturatedSolinas 2^416-2^208-1 (bitwidth = 64 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 9; s := 169230328010303641331690318856389386196071598838855992136870091590247882556495704531248437872567112920983350278405979725889536; c := [(411376139330301510538742295639337626245683966408394965837152256, 1), (1, 1)]; idxs := [3, 8, 4, 0, 5, 1, 6, 2, 7, 3, 8, 4, 0]; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 1.245447 s; user: 1.245452 s
