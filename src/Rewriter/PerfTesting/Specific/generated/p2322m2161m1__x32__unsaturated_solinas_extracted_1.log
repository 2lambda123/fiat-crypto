Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.955431 s; user: 0.955421 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.415122 s; user: 0.415127 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 0.427401 s; user: 0.427300 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 1.672718 s; user: 1.672715 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 1.019392 s; user: 1.019386 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 1.060801 s; user: 1.060789 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 4.327739 s; user: 4.327737 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 3.369094 s; user: 3.369097 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 3.468444 s; user: 3.468419 s
