Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.944433 s; user: 0.944080 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.407653 s; user: 0.407650 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = precomputed_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 0.420486 s; user: 0.420490 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 1.657214 s; user: 1.657209 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 1.040450 s; user: 1.040449 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_decision_tree ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 1.069896 s; user: 1.069890 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFullToStringsOf with extraction OCaml: real: 4.328198 s; user: 4.328111 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatNBEOf with extraction OCaml: real: 3.348850 s; user: 3.348854 s
Testing UnsaturatedSolinas 2^322-2^161-1 (bitwidth = 32 ) (index = 1 ) (method = unreduced_naive ) (params = {| n := 14; s := 8543948143683640329580086824678208458410818089426611079788166431288878903122562200091848347746304; c := [(2923003274661805836407369665432566039311865085952, 1), (1, 1)]; idxs := [6, 13, 7, 0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 7, 0]; machine_wordsize := 32|} ) PipelineFlatArithOf with extraction OCaml: real: 3.460680 s; user: 3.460665 s
