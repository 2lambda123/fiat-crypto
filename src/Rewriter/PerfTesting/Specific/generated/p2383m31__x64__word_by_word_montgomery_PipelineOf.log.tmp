Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.precomputed_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullOf with vm_compute" :
Tactic call ran for 13.707 secs (13.673u,0.033s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullOf with vm_compute" :
Tactic call ran for 51.041 secs (50.95u,0.068s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_naive ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullOf with vm_compute" :
Tactic call ran for 117.938 secs (117.737u,0.107s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.precomputed_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullToStringsOf with vm_compute" :
Tactic call ran for 14.723 secs (14.693u,0.015s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullToStringsOf with vm_compute" :
Tactic call ran for 51.365 secs (51.207u,0.096s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_naive ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullToStringsOf with vm_compute" :
Tactic call ran for 119.765 secs (119.617u,0.007s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.precomputed_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineNBEOf with vm_compute" :
Tactic call ran for 11.344 secs (11.328u,0.003s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineNBEOf with vm_compute" :
Tactic call ran for 34.885 secs (34.806u,0.012s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_naive ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineNBEOf with vm_compute" :
Tactic call ran for 76.145 secs (75.864u,0.191s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.precomputed_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineArithOf with vm_compute" :
Tactic call ran for 11.007 secs (10.972u,0.023s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineArithOf with vm_compute" :
Tactic call ran for 33.986 secs (33.885u,0.055s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.unreduced_naive ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineArithOf with vm_compute" :
Tactic call ran for 77.487 secs (77.06u,0.32s) (success)
Testing WordByWordMontgomery "2^383-31" (bitwidth = 64 ) (method = BoundsPipeline.precomputed_decision_tree ) (params = {| WordByWordMontgomery.m := 19701003098197239606139520050071806902539869635232723333974146702122860885748605305707133127442457820403313995153377; WordByWordMontgomery.machine_wordsize := 64 |} ) "PipelineFullOf with native_compute" (1) :
Tactic call ran for 272.467 secs (9.196u,0.227s) (failure)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
Tactic call ran for 0. secs (0.u,0.s) (failure after 1 backtracking)
