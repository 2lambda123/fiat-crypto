Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.275780 s; user: 0.274823 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.136737 s; user: 0.136708 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.153069 s; user: 0.153073 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.612418 s; user: 0.612407 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.325364 s; user: 0.307958 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.335841 s; user: 0.335169 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 2.117740 s; user: 2.107219 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 1.111956 s; user: 1.111888 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 1.235779 s; user: 1.235746 s
