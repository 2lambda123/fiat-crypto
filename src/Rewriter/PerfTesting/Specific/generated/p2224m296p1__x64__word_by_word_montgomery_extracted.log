Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.295157 s; user: 0.295105 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.147997 s; user: 0.148000 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = precomputed_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.179200 s; user: 0.179196 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 0.650392 s; user: 0.650390 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 0.324696 s; user: 0.324700 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_decision_tree ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 0.359134 s; user: 0.359137 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFullToStringsOf with extraction OCaml: real: 2.195045 s; user: 2.195043 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatNBEOf with extraction OCaml: real: 1.129915 s; user: 1.129864 s
Testing WordByWordMontgomery 2^224-2^96+1 (bitwidth = 64 ) (method = unreduced_naive ) (params = {| m := 26959946667150639794667015087019630673557916260026308143510066298881; machine_wordsize := 64|} ) PipelineFlatArithOf with extraction OCaml: real: 1.247070 s; user: 1.247072 s
