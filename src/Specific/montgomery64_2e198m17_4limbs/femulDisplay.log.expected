λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint64_t x17, uint64_t x18 = mulx_u64(x5, x11);
 uint64_t x20, uint64_t x21 = mulx_u64(x5, x13);
 uint64_t x23, uint64_t x24 = mulx_u64(x5, x15);
 uint64_t x26, uint64_t x27 = mulx_u64(x5, x14);
 uint64_t x29, uint8_t/*bool*/ x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, uint8_t/*bool*/ x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, uint8_t/*bool*/ x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x36, x27);
 uint64_t x41, uint64_t _ = mulx_u64(x17, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x44, uint64_t x45 = mulx_u64(x41, 0xffffffffffffffefL);
 uint64_t x47, uint64_t x48 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x50, uint64_t x51 = mulx_u64(x41, 0xffffffffffffffffL);
 uint64_t x53, uint8_t x54 = mulx_u64_out_u8(x41, 0x3f);
 uint64_t x56, uint8_t/*bool*/ x57 = addcarryx_u64(0x0, x45, x47);
 uint64_t x59, uint8_t/*bool*/ x60 = addcarryx_u64(x57, x48, x50);
 uint64_t x62, uint8_t/*bool*/ x63 = addcarryx_u64(x60, x51, x53);
 uint8_t x64 = ((uint8_t)0x0 + x63);
 uint8_t x65 = (x64 + x54);
 uint64_t _, uint8_t/*bool*/ x68 = addcarryx_u64(0x0, x17, x44);
 uint64_t x70, uint8_t/*bool*/ x71 = addcarryx_u64(x68, x29, x56);
 uint64_t x73, uint8_t/*bool*/ x74 = addcarryx_u64(x71, x32, x59);
 uint64_t x76, uint8_t/*bool*/ x77 = addcarryx_u64(x74, x35, x62);
 uint64_t x79, uint8_t/*bool*/ x80 = addcarryx_u64(x77, x38, x65);
 uint64_t x82, uint64_t x83 = mulx_u64(x7, x11);
 uint64_t x85, uint64_t x86 = mulx_u64(x7, x13);
 uint64_t x88, uint64_t x89 = mulx_u64(x7, x15);
 uint64_t x91, uint64_t x92 = mulx_u64(x7, x14);
 uint64_t x94, uint8_t/*bool*/ x95 = addcarryx_u64(0x0, x83, x85);
 uint64_t x97, uint8_t/*bool*/ x98 = addcarryx_u64(x95, x86, x88);
 uint64_t x100, uint8_t/*bool*/ x101 = addcarryx_u64(x98, x89, x91);
 uint64_t x103, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x101, x92);
 uint64_t x106, uint8_t/*bool*/ x107 = addcarryx_u64(0x0, x70, x82);
 uint64_t x109, uint8_t/*bool*/ x110 = addcarryx_u64(x107, x73, x94);
 uint64_t x112, uint8_t/*bool*/ x113 = addcarryx_u64(x110, x76, x97);
 uint64_t x115, uint8_t/*bool*/ x116 = addcarryx_u64(x113, x79, x100);
 uint64_t x118, uint8_t/*bool*/ x119 = addcarryx_u64(x116, x80, x103);
 uint64_t x121, uint64_t _ = mulx_u64(x106, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x124, uint64_t x125 = mulx_u64(x121, 0xffffffffffffffefL);
 uint64_t x127, uint64_t x128 = mulx_u64(x121, 0xffffffffffffffffL);
 uint64_t x130, uint64_t x131 = mulx_u64(x121, 0xffffffffffffffffL);
 uint64_t x133, uint8_t x134 = mulx_u64_out_u8(x121, 0x3f);
 uint64_t x136, uint8_t/*bool*/ x137 = addcarryx_u64(0x0, x125, x127);
 uint64_t x139, uint8_t/*bool*/ x140 = addcarryx_u64(x137, x128, x130);
 uint64_t x142, uint8_t/*bool*/ x143 = addcarryx_u64(x140, x131, x133);
 uint8_t x144 = ((uint8_t)0x0 + x143);
 uint8_t x145 = (x144 + x134);
 uint64_t _, uint8_t/*bool*/ x148 = addcarryx_u64(0x0, x106, x124);
 uint64_t x150, uint8_t/*bool*/ x151 = addcarryx_u64(x148, x109, x136);
 uint64_t x153, uint8_t/*bool*/ x154 = addcarryx_u64(x151, x112, x139);
 uint64_t x156, uint8_t/*bool*/ x157 = addcarryx_u64(x154, x115, x142);
 uint64_t x159, uint8_t/*bool*/ x160 = addcarryx_u64(x157, x118, x145);
 uint8_t x161 = ((uint8_t)x160 + x119);
 uint64_t x163, uint64_t x164 = mulx_u64(x9, x11);
 uint64_t x166, uint64_t x167 = mulx_u64(x9, x13);
 uint64_t x169, uint64_t x170 = mulx_u64(x9, x15);
 uint64_t x172, uint64_t x173 = mulx_u64(x9, x14);
 uint64_t x175, uint8_t/*bool*/ x176 = addcarryx_u64(0x0, x164, x166);
 uint64_t x178, uint8_t/*bool*/ x179 = addcarryx_u64(x176, x167, x169);
 uint64_t x181, uint8_t/*bool*/ x182 = addcarryx_u64(x179, x170, x172);
 uint64_t x184, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x182, x173);
 uint64_t x187, uint8_t/*bool*/ x188 = addcarryx_u64(0x0, x150, x163);
 uint64_t x190, uint8_t/*bool*/ x191 = addcarryx_u64(x188, x153, x175);
 uint64_t x193, uint8_t/*bool*/ x194 = addcarryx_u64(x191, x156, x178);
 uint64_t x196, uint8_t/*bool*/ x197 = addcarryx_u64(x194, x159, x181);
 uint64_t x199, uint8_t/*bool*/ x200 = addcarryx_u64(x197, x161, x184);
 uint64_t x202, uint64_t _ = mulx_u64(x187, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x205, uint64_t x206 = mulx_u64(x202, 0xffffffffffffffefL);
 uint64_t x208, uint64_t x209 = mulx_u64(x202, 0xffffffffffffffffL);
 uint64_t x211, uint64_t x212 = mulx_u64(x202, 0xffffffffffffffffL);
 uint64_t x214, uint8_t x215 = mulx_u64_out_u8(x202, 0x3f);
 uint64_t x217, uint8_t/*bool*/ x218 = addcarryx_u64(0x0, x206, x208);
 uint64_t x220, uint8_t/*bool*/ x221 = addcarryx_u64(x218, x209, x211);
 uint64_t x223, uint8_t/*bool*/ x224 = addcarryx_u64(x221, x212, x214);
 uint8_t x225 = ((uint8_t)0x0 + x224);
 uint8_t x226 = (x225 + x215);
 uint64_t _, uint8_t/*bool*/ x229 = addcarryx_u64(0x0, x187, x205);
 uint64_t x231, uint8_t/*bool*/ x232 = addcarryx_u64(x229, x190, x217);
 uint64_t x234, uint8_t/*bool*/ x235 = addcarryx_u64(x232, x193, x220);
 uint64_t x237, uint8_t/*bool*/ x238 = addcarryx_u64(x235, x196, x223);
 uint64_t x240, uint8_t/*bool*/ x241 = addcarryx_u64(x238, x199, x226);
 uint8_t x242 = ((uint8_t)x241 + x200);
 uint64_t x244, uint64_t x245 = mulx_u64(x8, x11);
 uint64_t x247, uint64_t x248 = mulx_u64(x8, x13);
 uint64_t x250, uint64_t x251 = mulx_u64(x8, x15);
 uint64_t x253, uint64_t x254 = mulx_u64(x8, x14);
 uint64_t x256, uint8_t/*bool*/ x257 = addcarryx_u64(0x0, x245, x247);
 uint64_t x259, uint8_t/*bool*/ x260 = addcarryx_u64(x257, x248, x250);
 uint64_t x262, uint8_t/*bool*/ x263 = addcarryx_u64(x260, x251, x253);
 uint64_t x265, uint8_t/*bool*/ _ = addcarryx_u64(0x0, x263, x254);
 uint64_t x268, uint8_t/*bool*/ x269 = addcarryx_u64(0x0, x231, x244);
 uint64_t x271, uint8_t/*bool*/ x272 = addcarryx_u64(x269, x234, x256);
 uint64_t x274, uint8_t/*bool*/ x275 = addcarryx_u64(x272, x237, x259);
 uint64_t x277, uint8_t/*bool*/ x278 = addcarryx_u64(x275, x240, x262);
 uint64_t x280, uint8_t/*bool*/ x281 = addcarryx_u64(x278, x242, x265);
 uint64_t x283, uint64_t _ = mulx_u64(x268, 0xf0f0f0f0f0f0f0f1L);
 uint64_t x286, uint64_t x287 = mulx_u64(x283, 0xffffffffffffffefL);
 uint64_t x289, uint64_t x290 = mulx_u64(x283, 0xffffffffffffffffL);
 uint64_t x292, uint64_t x293 = mulx_u64(x283, 0xffffffffffffffffL);
 uint64_t x295, uint8_t x296 = mulx_u64_out_u8(x283, 0x3f);
 uint64_t x298, uint8_t/*bool*/ x299 = addcarryx_u64(0x0, x287, x289);
 uint64_t x301, uint8_t/*bool*/ x302 = addcarryx_u64(x299, x290, x292);
 uint64_t x304, uint8_t/*bool*/ x305 = addcarryx_u64(x302, x293, x295);
 uint8_t x306 = ((uint8_t)0x0 + x305);
 uint8_t x307 = (x306 + x296);
 uint64_t _, uint8_t/*bool*/ x310 = addcarryx_u64(0x0, x268, x286);
 uint64_t x312, uint8_t/*bool*/ x313 = addcarryx_u64(x310, x271, x298);
 uint64_t x315, uint8_t/*bool*/ x316 = addcarryx_u64(x313, x274, x301);
 uint64_t x318, uint8_t/*bool*/ x319 = addcarryx_u64(x316, x277, x304);
 uint64_t x321, uint8_t/*bool*/ x322 = addcarryx_u64(x319, x280, x307);
 uint8_t x323 = ((uint8_t)x322 + x281);
 uint64_t x325, uint8_t/*bool*/ x326 = subborrow_u64(0x0, x312, 0xffffffffffffffefL);
 uint64_t x328, uint8_t/*bool*/ x329 = subborrow_u64(x326, x315, 0xffffffffffffffffL);
 uint64_t x331, uint8_t/*bool*/ x332 = subborrow_u64(x329, x318, 0xffffffffffffffffL);
 uint64_t x334, uint8_t/*bool*/ x335 = subborrow_u64(x332, x321, 0x3f);
 uint64_t _, uint8_t/*bool*/ x338 = subborrow_u64(x335, x323, 0x0);
 uint64_t x339 = cmovznz64(x338, x334, x321);
 uint64_t x340 = cmovznz64(x338, x331, x318);
 uint64_t x341 = cmovznz64(x338, x328, x315);
 uint64_t x342 = cmovznz64(x338, x325, x312);
 return (x339, x340, x341, x342))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)
