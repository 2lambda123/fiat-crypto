λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x15, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x17 = (x6 >> 0x15);
 uint32_t x18 = (x6 & 0x1fffff);
 uint32_t x19 = (x15 >> 0x15);
 uint32_t x20 = (x15 & 0x1fffff);
 uint32_t x21 = ((0x200000 * x19) + x20);
 uint32_t x22 = (x21 >> 0x15);
 uint32_t x23 = (x21 & 0x1fffff);
 uint32_t x24 = ((x17 + x8) + x22);
 uint32_t x25 = (x24 >> 0x16);
 uint32_t x26 = (x24 & 0x3fffff);
 uint32_t x27 = (x2 + x22);
 uint32_t x28 = (x27 >> 0x16);
 uint32_t x29 = (x27 & 0x3fffff);
 uint32_t x30 = (x25 + x10);
 uint32_t x31 = (x30 >> 0x15);
 uint32_t x32 = (x30 & 0x1fffff);
 uint32_t x33 = (x28 + x4);
 uint32_t x34 = (x33 >> 0x15);
 uint32_t x35 = (x33 & 0x1fffff);
 uint32_t x36 = (x31 + x12);
 uint32_t x37 = (x36 >> 0x15);
 uint32_t x38 = (x36 & 0x1fffff);
 uint32_t x39 = (x34 + x18);
 uint32_t x40 = (x39 >> 0x15);
 uint32_t x41 = (x39 & 0x1fffff);
 uint32_t x42 = (x37 + x14);
 uint32_t x43 = (x42 >> 0x16);
 uint32_t x44 = (x42 & 0x3fffff);
 uint32_t x45 = (x43 + x16);
 uint32_t x46 = (x45 >> 0x15);
 uint32_t x47 = (x45 & 0x1fffff);
 uint32_t x48 = (x46 + x23);
 uint32_t x49 = (x48 >> 0x15);
 uint32_t x50 = (x48 & 0x1fffff);
 uint32_t x51 = ((0x200000 * x49) + x50);
 uint32_t x52 = (x51 >> 0x15);
 uint32_t x53 = (x51 & 0x1fffff);
 uint32_t x54 = ((x40 + x26) + x52);
 uint32_t x55 = (x54 >> 0x16);
 uint32_t x56 = (x54 & 0x3fffff);
 uint32_t x57 = (x29 + x52);
 uint32_t x58 = (x57 >> 0x16);
 uint32_t x59 = (x57 & 0x3fffff);
 return (Return x53, Return x47, Return x44, Return x38, (x55 + x32), Return x56, Return x41, (x58 + x35), Return x59))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
