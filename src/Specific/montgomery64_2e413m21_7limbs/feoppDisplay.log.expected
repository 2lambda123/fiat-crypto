λ x : word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x11, x12, x10, x8, x6, x4, x2)%core,
 uint64_t x14, uint8_t/*bool*/ x15 = subborrow_u64(0x0, 0x0, x2);
 uint64_t x17, uint8_t/*bool*/ x18 = subborrow_u64(x15, 0x0, x4);
 uint64_t x20, uint8_t/*bool*/ x21 = subborrow_u64(x18, 0x0, x6);
 uint64_t x23, uint8_t/*bool*/ x24 = subborrow_u64(x21, 0x0, x8);
 uint64_t x26, uint8_t/*bool*/ x27 = subborrow_u64(x24, 0x0, x10);
 uint64_t x29, uint8_t/*bool*/ x30 = subborrow_u64(x27, 0x0, x12);
 uint64_t x32, uint8_t/*bool*/ x33 = subborrow_u64(x30, 0x0, x11);
 uint64_t x34 = cmovznz64(x33, 0x0, 0xffffffffffffffffL);
 uint64_t x35 = (x34 & 0xffffffffffffffebL);
 uint64_t x37, uint8_t/*bool*/ x38 = addcarryx_u64(0x0, x14, x35);
 uint64_t x39 = (x34 & 0xffffffffffffffffL);
 uint64_t x41, uint8_t/*bool*/ x42 = addcarryx_u64(x38, x17, x39);
 uint64_t x43 = (x34 & 0xffffffffffffffffL);
 uint64_t x45, uint8_t/*bool*/ x46 = addcarryx_u64(x42, x20, x43);
 uint64_t x47 = (x34 & 0xffffffffffffffffL);
 uint64_t x49, uint8_t/*bool*/ x50 = addcarryx_u64(x46, x23, x47);
 uint64_t x51 = (x34 & 0xffffffffffffffffL);
 uint64_t x53, uint8_t/*bool*/ x54 = addcarryx_u64(x50, x26, x51);
 uint64_t x55 = (x34 & 0xffffffffffffffffL);
 uint64_t x57, uint8_t/*bool*/ x58 = addcarryx_u64(x54, x29, x55);
 uint64_t x59 = (x34 & 0x1fffffff);
 uint64_t x61, uint8_t/*bool*/ _ = addcarryx_u64(x58, x32, x59);
 (Return x61, Return x57, Return x53, Return x49, Return x45, Return x41, Return x37))
x
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
