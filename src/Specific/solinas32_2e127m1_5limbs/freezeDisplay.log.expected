λ x : word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x7, x8, x6, x4, x2)%core,
 uint32_t x10, uint8_t/*bool*/ x11 = subborrow_u26(0x0, x2, 0x3ffffff);
 uint32_t x13, uint8_t/*bool*/ x14 = subborrow_u25(x11, x4, 0x1ffffff);
 uint32_t x16, uint8_t/*bool*/ x17 = subborrow_u26(x14, x6, 0x3ffffff);
 uint32_t x19, uint8_t/*bool*/ x20 = subborrow_u25(x17, x8, 0x1ffffff);
 uint32_t x22, uint8_t/*bool*/ x23 = subborrow_u25(x20, x7, 0x1ffffff);
 uint32_t x24 = cmovznz32(x23, 0x0, 0xffffffff);
 uint32_t x25 = (x24 & 0x3ffffff);
 uint32_t x27, uint8_t/*bool*/ x28 = addcarryx_u26(0x0, x10, x25);
 uint32_t x29 = (x24 & 0x1ffffff);
 uint32_t x31, uint8_t/*bool*/ x32 = addcarryx_u25(x28, x13, x29);
 uint32_t x33 = (x24 & 0x3ffffff);
 uint32_t x35, uint8_t/*bool*/ x36 = addcarryx_u26(x32, x16, x33);
 uint32_t x37 = (x24 & 0x1ffffff);
 uint32_t x39, uint8_t/*bool*/ x40 = addcarryx_u25(x36, x19, x37);
 uint32_t x41 = (x24 & 0x1ffffff);
 uint32_t x43, uint8_t/*bool*/ _ = addcarryx_u25(x40, x22, x41);
 (Return x43, Return x39, Return x35, Return x31, Return x27))
x
     : word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
