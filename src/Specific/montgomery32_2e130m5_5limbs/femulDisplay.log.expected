λ x x0 : word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x10, x11, x9, x7, x5, (x18, x19, x17, x15, x13))%core,
 uint32_t x21, uint32_t x22 = mulx_u32(x5, x13);
 uint32_t x24, uint32_t x25 = mulx_u32(x5, x15);
 uint32_t x27, uint32_t x28 = mulx_u32(x5, x17);
 uint32_t x30, uint32_t x31 = mulx_u32(x5, x19);
 uint32_t x33, uint32_t x34 = mulx_u32(x5, x18);
 uint32_t x36, uint8_t/*bool*/ x37 = addcarryx_u32(0x0, x22, x24);
 uint32_t x39, uint8_t/*bool*/ x40 = addcarryx_u32(x37, x25, x27);
 uint32_t x42, uint8_t/*bool*/ x43 = addcarryx_u32(x40, x28, x30);
 uint32_t x45, uint8_t/*bool*/ x46 = addcarryx_u32(x43, x31, x33);
 uint32_t x48, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x46, x34);
 uint32_t x51, uint32_t _ = mulx_u32(x21, 0xcccccccd);
 uint32_t x54, uint32_t x55 = mulx_u32(x51, 0xfffffffb);
 uint32_t x57, uint32_t x58 = mulx_u32(x51, 0xffffffff);
 uint32_t x60, uint32_t x61 = mulx_u32(x51, 0xffffffff);
 uint32_t x63, uint32_t x64 = mulx_u32(x51, 0xffffffff);
 uint32_t x66, uint8_t x67 = mulx_u32_out_u8(x51, 0x3);
 uint32_t x69, uint8_t/*bool*/ x70 = addcarryx_u32(0x0, x55, x57);
 uint32_t x72, uint8_t/*bool*/ x73 = addcarryx_u32(x70, x58, x60);
 uint32_t x75, uint8_t/*bool*/ x76 = addcarryx_u32(x73, x61, x63);
 uint32_t x78, uint8_t/*bool*/ x79 = addcarryx_u32(x76, x64, x66);
 uint8_t x80 = ((uint8_t)0x0 + x79);
 uint8_t x81 = (x80 + x67);
 uint32_t _, uint8_t/*bool*/ x84 = addcarryx_u32(0x0, x21, x54);
 uint32_t x86, uint8_t/*bool*/ x87 = addcarryx_u32(x84, x36, x69);
 uint32_t x89, uint8_t/*bool*/ x90 = addcarryx_u32(x87, x39, x72);
 uint32_t x92, uint8_t/*bool*/ x93 = addcarryx_u32(x90, x42, x75);
 uint32_t x95, uint8_t/*bool*/ x96 = addcarryx_u32(x93, x45, x78);
 uint32_t x98, uint8_t/*bool*/ x99 = addcarryx_u32(x96, x48, x81);
 uint32_t x101, uint32_t x102 = mulx_u32(x7, x13);
 uint32_t x104, uint32_t x105 = mulx_u32(x7, x15);
 uint32_t x107, uint32_t x108 = mulx_u32(x7, x17);
 uint32_t x110, uint32_t x111 = mulx_u32(x7, x19);
 uint32_t x113, uint32_t x114 = mulx_u32(x7, x18);
 uint32_t x116, uint8_t/*bool*/ x117 = addcarryx_u32(0x0, x102, x104);
 uint32_t x119, uint8_t/*bool*/ x120 = addcarryx_u32(x117, x105, x107);
 uint32_t x122, uint8_t/*bool*/ x123 = addcarryx_u32(x120, x108, x110);
 uint32_t x125, uint8_t/*bool*/ x126 = addcarryx_u32(x123, x111, x113);
 uint32_t x128, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x126, x114);
 uint32_t x131, uint8_t/*bool*/ x132 = addcarryx_u32(0x0, x86, x101);
 uint32_t x134, uint8_t/*bool*/ x135 = addcarryx_u32(x132, x89, x116);
 uint32_t x137, uint8_t/*bool*/ x138 = addcarryx_u32(x135, x92, x119);
 uint32_t x140, uint8_t/*bool*/ x141 = addcarryx_u32(x138, x95, x122);
 uint32_t x143, uint8_t/*bool*/ x144 = addcarryx_u32(x141, x98, x125);
 uint32_t x146, uint8_t/*bool*/ x147 = addcarryx_u32(x144, x99, x128);
 uint32_t x149, uint32_t _ = mulx_u32(x131, 0xcccccccd);
 uint32_t x152, uint32_t x153 = mulx_u32(x149, 0xfffffffb);
 uint32_t x155, uint32_t x156 = mulx_u32(x149, 0xffffffff);
 uint32_t x158, uint32_t x159 = mulx_u32(x149, 0xffffffff);
 uint32_t x161, uint32_t x162 = mulx_u32(x149, 0xffffffff);
 uint32_t x164, uint8_t x165 = mulx_u32_out_u8(x149, 0x3);
 uint32_t x167, uint8_t/*bool*/ x168 = addcarryx_u32(0x0, x153, x155);
 uint32_t x170, uint8_t/*bool*/ x171 = addcarryx_u32(x168, x156, x158);
 uint32_t x173, uint8_t/*bool*/ x174 = addcarryx_u32(x171, x159, x161);
 uint32_t x176, uint8_t/*bool*/ x177 = addcarryx_u32(x174, x162, x164);
 uint8_t x178 = ((uint8_t)0x0 + x177);
 uint8_t x179 = (x178 + x165);
 uint32_t _, uint8_t/*bool*/ x182 = addcarryx_u32(0x0, x131, x152);
 uint32_t x184, uint8_t/*bool*/ x185 = addcarryx_u32(x182, x134, x167);
 uint32_t x187, uint8_t/*bool*/ x188 = addcarryx_u32(x185, x137, x170);
 uint32_t x190, uint8_t/*bool*/ x191 = addcarryx_u32(x188, x140, x173);
 uint32_t x193, uint8_t/*bool*/ x194 = addcarryx_u32(x191, x143, x176);
 uint32_t x196, uint8_t/*bool*/ x197 = addcarryx_u32(x194, x146, x179);
 uint8_t x198 = ((uint8_t)x197 + x147);
 uint32_t x200, uint32_t x201 = mulx_u32(x9, x13);
 uint32_t x203, uint32_t x204 = mulx_u32(x9, x15);
 uint32_t x206, uint32_t x207 = mulx_u32(x9, x17);
 uint32_t x209, uint32_t x210 = mulx_u32(x9, x19);
 uint32_t x212, uint32_t x213 = mulx_u32(x9, x18);
 uint32_t x215, uint8_t/*bool*/ x216 = addcarryx_u32(0x0, x201, x203);
 uint32_t x218, uint8_t/*bool*/ x219 = addcarryx_u32(x216, x204, x206);
 uint32_t x221, uint8_t/*bool*/ x222 = addcarryx_u32(x219, x207, x209);
 uint32_t x224, uint8_t/*bool*/ x225 = addcarryx_u32(x222, x210, x212);
 uint32_t x227, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x225, x213);
 uint32_t x230, uint8_t/*bool*/ x231 = addcarryx_u32(0x0, x184, x200);
 uint32_t x233, uint8_t/*bool*/ x234 = addcarryx_u32(x231, x187, x215);
 uint32_t x236, uint8_t/*bool*/ x237 = addcarryx_u32(x234, x190, x218);
 uint32_t x239, uint8_t/*bool*/ x240 = addcarryx_u32(x237, x193, x221);
 uint32_t x242, uint8_t/*bool*/ x243 = addcarryx_u32(x240, x196, x224);
 uint32_t x245, uint8_t/*bool*/ x246 = addcarryx_u32(x243, x198, x227);
 uint32_t x248, uint32_t _ = mulx_u32(x230, 0xcccccccd);
 uint32_t x251, uint32_t x252 = mulx_u32(x248, 0xfffffffb);
 uint32_t x254, uint32_t x255 = mulx_u32(x248, 0xffffffff);
 uint32_t x257, uint32_t x258 = mulx_u32(x248, 0xffffffff);
 uint32_t x260, uint32_t x261 = mulx_u32(x248, 0xffffffff);
 uint32_t x263, uint8_t x264 = mulx_u32_out_u8(x248, 0x3);
 uint32_t x266, uint8_t/*bool*/ x267 = addcarryx_u32(0x0, x252, x254);
 uint32_t x269, uint8_t/*bool*/ x270 = addcarryx_u32(x267, x255, x257);
 uint32_t x272, uint8_t/*bool*/ x273 = addcarryx_u32(x270, x258, x260);
 uint32_t x275, uint8_t/*bool*/ x276 = addcarryx_u32(x273, x261, x263);
 uint8_t x277 = ((uint8_t)0x0 + x276);
 uint8_t x278 = (x277 + x264);
 uint32_t _, uint8_t/*bool*/ x281 = addcarryx_u32(0x0, x230, x251);
 uint32_t x283, uint8_t/*bool*/ x284 = addcarryx_u32(x281, x233, x266);
 uint32_t x286, uint8_t/*bool*/ x287 = addcarryx_u32(x284, x236, x269);
 uint32_t x289, uint8_t/*bool*/ x290 = addcarryx_u32(x287, x239, x272);
 uint32_t x292, uint8_t/*bool*/ x293 = addcarryx_u32(x290, x242, x275);
 uint32_t x295, uint8_t/*bool*/ x296 = addcarryx_u32(x293, x245, x278);
 uint8_t x297 = ((uint8_t)x296 + x246);
 uint32_t x299, uint32_t x300 = mulx_u32(x11, x13);
 uint32_t x302, uint32_t x303 = mulx_u32(x11, x15);
 uint32_t x305, uint32_t x306 = mulx_u32(x11, x17);
 uint32_t x308, uint32_t x309 = mulx_u32(x11, x19);
 uint32_t x311, uint32_t x312 = mulx_u32(x11, x18);
 uint32_t x314, uint8_t/*bool*/ x315 = addcarryx_u32(0x0, x300, x302);
 uint32_t x317, uint8_t/*bool*/ x318 = addcarryx_u32(x315, x303, x305);
 uint32_t x320, uint8_t/*bool*/ x321 = addcarryx_u32(x318, x306, x308);
 uint32_t x323, uint8_t/*bool*/ x324 = addcarryx_u32(x321, x309, x311);
 uint32_t x326, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x324, x312);
 uint32_t x329, uint8_t/*bool*/ x330 = addcarryx_u32(0x0, x283, x299);
 uint32_t x332, uint8_t/*bool*/ x333 = addcarryx_u32(x330, x286, x314);
 uint32_t x335, uint8_t/*bool*/ x336 = addcarryx_u32(x333, x289, x317);
 uint32_t x338, uint8_t/*bool*/ x339 = addcarryx_u32(x336, x292, x320);
 uint32_t x341, uint8_t/*bool*/ x342 = addcarryx_u32(x339, x295, x323);
 uint32_t x344, uint8_t/*bool*/ x345 = addcarryx_u32(x342, x297, x326);
 uint32_t x347, uint32_t _ = mulx_u32(x329, 0xcccccccd);
 uint32_t x350, uint32_t x351 = mulx_u32(x347, 0xfffffffb);
 uint32_t x353, uint32_t x354 = mulx_u32(x347, 0xffffffff);
 uint32_t x356, uint32_t x357 = mulx_u32(x347, 0xffffffff);
 uint32_t x359, uint32_t x360 = mulx_u32(x347, 0xffffffff);
 uint32_t x362, uint8_t x363 = mulx_u32_out_u8(x347, 0x3);
 uint32_t x365, uint8_t/*bool*/ x366 = addcarryx_u32(0x0, x351, x353);
 uint32_t x368, uint8_t/*bool*/ x369 = addcarryx_u32(x366, x354, x356);
 uint32_t x371, uint8_t/*bool*/ x372 = addcarryx_u32(x369, x357, x359);
 uint32_t x374, uint8_t/*bool*/ x375 = addcarryx_u32(x372, x360, x362);
 uint8_t x376 = ((uint8_t)0x0 + x375);
 uint8_t x377 = (x376 + x363);
 uint32_t _, uint8_t/*bool*/ x380 = addcarryx_u32(0x0, x329, x350);
 uint32_t x382, uint8_t/*bool*/ x383 = addcarryx_u32(x380, x332, x365);
 uint32_t x385, uint8_t/*bool*/ x386 = addcarryx_u32(x383, x335, x368);
 uint32_t x388, uint8_t/*bool*/ x389 = addcarryx_u32(x386, x338, x371);
 uint32_t x391, uint8_t/*bool*/ x392 = addcarryx_u32(x389, x341, x374);
 uint32_t x394, uint8_t/*bool*/ x395 = addcarryx_u32(x392, x344, x377);
 uint8_t x396 = ((uint8_t)x395 + x345);
 uint32_t x398, uint32_t x399 = mulx_u32(x10, x13);
 uint32_t x401, uint32_t x402 = mulx_u32(x10, x15);
 uint32_t x404, uint32_t x405 = mulx_u32(x10, x17);
 uint32_t x407, uint32_t x408 = mulx_u32(x10, x19);
 uint32_t x410, uint32_t x411 = mulx_u32(x10, x18);
 uint32_t x413, uint8_t/*bool*/ x414 = addcarryx_u32(0x0, x399, x401);
 uint32_t x416, uint8_t/*bool*/ x417 = addcarryx_u32(x414, x402, x404);
 uint32_t x419, uint8_t/*bool*/ x420 = addcarryx_u32(x417, x405, x407);
 uint32_t x422, uint8_t/*bool*/ x423 = addcarryx_u32(x420, x408, x410);
 uint32_t x425, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x423, x411);
 uint32_t x428, uint8_t/*bool*/ x429 = addcarryx_u32(0x0, x382, x398);
 uint32_t x431, uint8_t/*bool*/ x432 = addcarryx_u32(x429, x385, x413);
 uint32_t x434, uint8_t/*bool*/ x435 = addcarryx_u32(x432, x388, x416);
 uint32_t x437, uint8_t/*bool*/ x438 = addcarryx_u32(x435, x391, x419);
 uint32_t x440, uint8_t/*bool*/ x441 = addcarryx_u32(x438, x394, x422);
 uint32_t x443, uint8_t/*bool*/ x444 = addcarryx_u32(x441, x396, x425);
 uint32_t x446, uint32_t _ = mulx_u32(x428, 0xcccccccd);
 uint32_t x449, uint32_t x450 = mulx_u32(x446, 0xfffffffb);
 uint32_t x452, uint32_t x453 = mulx_u32(x446, 0xffffffff);
 uint32_t x455, uint32_t x456 = mulx_u32(x446, 0xffffffff);
 uint32_t x458, uint32_t x459 = mulx_u32(x446, 0xffffffff);
 uint32_t x461, uint8_t x462 = mulx_u32_out_u8(x446, 0x3);
 uint32_t x464, uint8_t/*bool*/ x465 = addcarryx_u32(0x0, x450, x452);
 uint32_t x467, uint8_t/*bool*/ x468 = addcarryx_u32(x465, x453, x455);
 uint32_t x470, uint8_t/*bool*/ x471 = addcarryx_u32(x468, x456, x458);
 uint32_t x473, uint8_t/*bool*/ x474 = addcarryx_u32(x471, x459, x461);
 uint8_t x475 = ((uint8_t)0x0 + x474);
 uint8_t x476 = (x475 + x462);
 uint32_t _, uint8_t/*bool*/ x479 = addcarryx_u32(0x0, x428, x449);
 uint32_t x481, uint8_t/*bool*/ x482 = addcarryx_u32(x479, x431, x464);
 uint32_t x484, uint8_t/*bool*/ x485 = addcarryx_u32(x482, x434, x467);
 uint32_t x487, uint8_t/*bool*/ x488 = addcarryx_u32(x485, x437, x470);
 uint32_t x490, uint8_t/*bool*/ x491 = addcarryx_u32(x488, x440, x473);
 uint32_t x493, uint8_t/*bool*/ x494 = addcarryx_u32(x491, x443, x476);
 uint8_t x495 = ((uint8_t)x494 + x444);
 uint32_t x497, uint8_t/*bool*/ x498 = subborrow_u32(0x0, x481, 0xfffffffb);
 uint32_t x500, uint8_t/*bool*/ x501 = subborrow_u32(x498, x484, 0xffffffff);
 uint32_t x503, uint8_t/*bool*/ x504 = subborrow_u32(x501, x487, 0xffffffff);
 uint32_t x506, uint8_t/*bool*/ x507 = subborrow_u32(x504, x490, 0xffffffff);
 uint32_t x509, uint8_t/*bool*/ x510 = subborrow_u32(x507, x493, 0x3);
 uint32_t _, uint8_t/*bool*/ x513 = subborrow_u32(x510, x495, 0x0);
 uint32_t x514 = cmovznz32(x513, x509, x493);
 uint32_t x515 = cmovznz32(x513, x506, x490);
 uint32_t x516 = cmovznz32(x513, x503, x487);
 uint32_t x517 = cmovznz32(x513, x500, x484);
 uint32_t x518 = cmovznz32(x513, x497, x481);
 return (x514, x515, x516, x517, x518))
(x, x0)%core
     : word32 * word32 * word32 * word32 * word32 → word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
