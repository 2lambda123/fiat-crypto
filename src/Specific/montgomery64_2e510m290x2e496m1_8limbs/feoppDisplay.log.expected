λ x : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x13, x14, x12, x10, x8, x6, x4, x2)%core,
 uint64_t x16, uint8_t/*bool*/ x17 = subborrow_u64(0x0, 0x0, x2);
 uint64_t x19, uint8_t/*bool*/ x20 = subborrow_u64(x17, 0x0, x4);
 uint64_t x22, uint8_t/*bool*/ x23 = subborrow_u64(x20, 0x0, x6);
 uint64_t x25, uint8_t/*bool*/ x26 = subborrow_u64(x23, 0x0, x8);
 uint64_t x28, uint8_t/*bool*/ x29 = subborrow_u64(x26, 0x0, x10);
 uint64_t x31, uint8_t/*bool*/ x32 = subborrow_u64(x29, 0x0, x12);
 uint64_t x34, uint8_t/*bool*/ x35 = subborrow_u64(x32, 0x0, x14);
 uint64_t x37, uint8_t/*bool*/ x38 = subborrow_u64(x35, 0x0, x13);
 uint64_t x39 = cmovznz64(x38, 0x0, 0xffffffffffffffffL);
 uint64_t x40 = (x39 & 0xffffffffffffffffL);
 uint64_t x42, uint8_t/*bool*/ x43 = addcarryx_u64(0x0, x16, x40);
 uint64_t x44 = (x39 & 0xffffffffffffffffL);
 uint64_t x46, uint8_t/*bool*/ x47 = addcarryx_u64(x43, x19, x44);
 uint64_t x48 = (x39 & 0xffffffffffffffffL);
 uint64_t x50, uint8_t/*bool*/ x51 = addcarryx_u64(x47, x22, x48);
 uint64_t x52 = (x39 & 0xffffffffffffffffL);
 uint64_t x54, uint8_t/*bool*/ x55 = addcarryx_u64(x51, x25, x52);
 uint64_t x56 = (x39 & 0xffffffffffffffffL);
 uint64_t x58, uint8_t/*bool*/ x59 = addcarryx_u64(x55, x28, x56);
 uint64_t x60 = (x39 & 0xffffffffffffffffL);
 uint64_t x62, uint8_t/*bool*/ x63 = addcarryx_u64(x59, x31, x60);
 uint64_t x64 = (x39 & 0xffffffffffffffffL);
 uint64_t x66, uint8_t/*bool*/ x67 = addcarryx_u64(x63, x34, x64);
 uint64_t x68 = (x39 & 0x3eddffffffffffff);
 uint64_t x70, uint8_t/*bool*/ _ = addcarryx_u64(x67, x37, x68);
 (Return x70, Return x66, Return x62, Return x58, Return x54, Return x50, Return x46, Return x42))
x
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
