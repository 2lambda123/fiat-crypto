λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x21, x22, x20, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x23 = (x2 >> 0x16);
 uint32_t x24 = (x2 & 0x3fffff);
 uint32_t x25 = (x23 + x4);
 uint32_t x26 = (x25 >> 0x15);
 uint32_t x27 = (x25 & 0x1fffff);
 uint32_t x28 = (x26 + x6);
 uint32_t x29 = (x28 >> 0x15);
 uint32_t x30 = (x28 & 0x1fffff);
 uint32_t x31 = (x29 + x8);
 uint32_t x32 = (x31 >> 0x15);
 uint32_t x33 = (x31 & 0x1fffff);
 uint32_t x34 = (x32 + x10);
 uint32_t x35 = (x34 >> 0x16);
 uint32_t x36 = (x34 & 0x3fffff);
 uint32_t x37 = (x35 + x12);
 uint32_t x38 = (x37 >> 0x15);
 uint32_t x39 = (x37 & 0x1fffff);
 uint32_t x40 = (x38 + x14);
 uint32_t x41 = (x40 >> 0x15);
 uint32_t x42 = (x40 & 0x1fffff);
 uint32_t x43 = (x41 + x16);
 uint32_t x44 = (x43 >> 0x15);
 uint32_t x45 = (x43 & 0x1fffff);
 uint32_t x46 = (x44 + x18);
 uint32_t x47 = (x46 >> 0x16);
 uint32_t x48 = (x46 & 0x3fffff);
 uint32_t x49 = (x47 + x20);
 uint32_t x50 = (x49 >> 0x15);
 uint32_t x51 = (x49 & 0x1fffff);
 uint32_t x52 = (x50 + x22);
 uint32_t x53 = (x52 >> 0x15);
 uint32_t x54 = (x52 & 0x1fffff);
 uint32_t x55 = (x53 + x21);
 uint32_t x56 = (x55 >> 0x15);
 uint32_t x57 = (x55 & 0x1fffff);
 uint32_t x58 = (x24 + (0x2fd * x56));
 uint32_t x59 = (x58 >> 0x16);
 uint32_t x60 = (x58 & 0x3fffff);
 uint32_t x61 = (x59 + x27);
 uint32_t x62 = (x61 >> 0x15);
 uint32_t x63 = (x61 & 0x1fffff);
 return (Return x57, Return x54, Return x51, Return x48, Return x45, Return x42, Return x39, Return x36, Return x33, (x62 + x30), Return x63, Return x60))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
