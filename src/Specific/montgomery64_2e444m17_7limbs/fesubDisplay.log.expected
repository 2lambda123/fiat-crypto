λ x x0 : word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x14, x15, x13, x11, x9, x7, x5, (x26, x27, x25, x23, x21, x19, x17))%core,
 uint64_t x29, uint8_t/*bool*/ x30 = subborrow_u64(0x0, x5, x17);
 uint64_t x32, uint8_t/*bool*/ x33 = subborrow_u64(x30, x7, x19);
 uint64_t x35, uint8_t/*bool*/ x36 = subborrow_u64(x33, x9, x21);
 uint64_t x38, uint8_t/*bool*/ x39 = subborrow_u64(x36, x11, x23);
 uint64_t x41, uint8_t/*bool*/ x42 = subborrow_u64(x39, x13, x25);
 uint64_t x44, uint8_t/*bool*/ x45 = subborrow_u64(x42, x15, x27);
 uint64_t x47, uint8_t/*bool*/ x48 = subborrow_u64(x45, x14, x26);
 uint64_t x49 = cmovznz64(x48, 0x0, 0xffffffffffffffffL);
 uint64_t x50 = (x49 & 0xffffffffffffffefL);
 uint64_t x52, uint8_t/*bool*/ x53 = addcarryx_u64(0x0, x29, x50);
 uint64_t x54 = (x49 & 0xffffffffffffffffL);
 uint64_t x56, uint8_t/*bool*/ x57 = addcarryx_u64(x53, x32, x54);
 uint64_t x58 = (x49 & 0xffffffffffffffffL);
 uint64_t x60, uint8_t/*bool*/ x61 = addcarryx_u64(x57, x35, x58);
 uint64_t x62 = (x49 & 0xffffffffffffffffL);
 uint64_t x64, uint8_t/*bool*/ x65 = addcarryx_u64(x61, x38, x62);
 uint64_t x66 = (x49 & 0xffffffffffffffffL);
 uint64_t x68, uint8_t/*bool*/ x69 = addcarryx_u64(x65, x41, x66);
 uint64_t x70 = (x49 & 0xffffffffffffffffL);
 uint64_t x72, uint8_t/*bool*/ x73 = addcarryx_u64(x69, x44, x70);
 uint64_t x74 = (x49 & 0xfffffffffffffff);
 uint64_t x76, uint8_t/*bool*/ _ = addcarryx_u64(x73, x47, x74);
 (Return x76, Return x72, Return x68, Return x64, Return x60, Return x56, Return x52))
(x, x0)%core
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
