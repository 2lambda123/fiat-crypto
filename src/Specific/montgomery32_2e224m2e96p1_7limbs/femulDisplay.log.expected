λ x x0 : word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x14, x15, x13, x11, x9, x7, x5, (x26, x27, x25, x23, x21, x19, x17))%core,
 uint32_t x29, uint32_t x30 = mulx_u32(x5, x17);
 uint32_t x32, uint32_t x33 = mulx_u32(x5, x19);
 uint32_t x35, uint32_t x36 = mulx_u32(x5, x21);
 uint32_t x38, uint32_t x39 = mulx_u32(x5, x23);
 uint32_t x41, uint32_t x42 = mulx_u32(x5, x25);
 uint32_t x44, uint32_t x45 = mulx_u32(x5, x27);
 uint32_t x47, uint32_t x48 = mulx_u32(x5, x26);
 uint32_t x50, uint8_t/*bool*/ x51 = addcarryx_u32(0x0, x30, x32);
 uint32_t x53, uint8_t/*bool*/ x54 = addcarryx_u32(x51, x33, x35);
 uint32_t x56, uint8_t/*bool*/ x57 = addcarryx_u32(x54, x36, x38);
 uint32_t x59, uint8_t/*bool*/ x60 = addcarryx_u32(x57, x39, x41);
 uint32_t x62, uint8_t/*bool*/ x63 = addcarryx_u32(x60, x42, x44);
 uint32_t x65, uint8_t/*bool*/ x66 = addcarryx_u32(x63, x45, x47);
 uint32_t x68, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x66, x48);
 uint32_t x71, uint32_t _ = mulx_u32(x29, 0xffffffff);
 uint32_t x74, uint32_t x75 = mulx_u32(x71, 0xffffffff);
 uint32_t x77, uint32_t x78 = mulx_u32(x71, 0xffffffff);
 uint32_t x80, uint32_t x81 = mulx_u32(x71, 0xffffffff);
 uint32_t x83, uint32_t x84 = mulx_u32(x71, 0xffffffff);
 uint8_t/*bool*/ x85 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x86 = (1&(0x0 + 0x0));
 uint32_t x88, uint8_t/*bool*/ x89 = addcarryx_u32(0x0, x75, x77);
 uint32_t x91, uint8_t/*bool*/ x92 = addcarryx_u32(x89, x78, x80);
 uint32_t x94, uint8_t/*bool*/ x95 = addcarryx_u32(x92, x81, x83);
 uint32_t x97, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x95, x84);
 uint32_t _, uint8_t/*bool*/ x101 = addcarryx_u32(0x0, x29, x71);
 uint32_t x103, uint8_t/*bool*/ x104 = addcarryx_u32(x101, x50, x85);
 uint32_t x106, uint8_t/*bool*/ x107 = addcarryx_u32(x104, x53, x86);
 uint32_t x109, uint8_t/*bool*/ x110 = addcarryx_u32(x107, x56, x74);
 uint32_t x112, uint8_t/*bool*/ x113 = addcarryx_u32(x110, x59, x88);
 uint32_t x115, uint8_t/*bool*/ x116 = addcarryx_u32(x113, x62, x91);
 uint32_t x118, uint8_t/*bool*/ x119 = addcarryx_u32(x116, x65, x94);
 uint32_t x121, uint8_t/*bool*/ x122 = addcarryx_u32(x119, x68, x97);
 uint32_t x124, uint32_t x125 = mulx_u32(x7, x17);
 uint32_t x127, uint32_t x128 = mulx_u32(x7, x19);
 uint32_t x130, uint32_t x131 = mulx_u32(x7, x21);
 uint32_t x133, uint32_t x134 = mulx_u32(x7, x23);
 uint32_t x136, uint32_t x137 = mulx_u32(x7, x25);
 uint32_t x139, uint32_t x140 = mulx_u32(x7, x27);
 uint32_t x142, uint32_t x143 = mulx_u32(x7, x26);
 uint32_t x145, uint8_t/*bool*/ x146 = addcarryx_u32(0x0, x125, x127);
 uint32_t x148, uint8_t/*bool*/ x149 = addcarryx_u32(x146, x128, x130);
 uint32_t x151, uint8_t/*bool*/ x152 = addcarryx_u32(x149, x131, x133);
 uint32_t x154, uint8_t/*bool*/ x155 = addcarryx_u32(x152, x134, x136);
 uint32_t x157, uint8_t/*bool*/ x158 = addcarryx_u32(x155, x137, x139);
 uint32_t x160, uint8_t/*bool*/ x161 = addcarryx_u32(x158, x140, x142);
 uint32_t x163, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x161, x143);
 uint32_t x166, uint8_t/*bool*/ x167 = addcarryx_u32(0x0, x103, x124);
 uint32_t x169, uint8_t/*bool*/ x170 = addcarryx_u32(x167, x106, x145);
 uint32_t x172, uint8_t/*bool*/ x173 = addcarryx_u32(x170, x109, x148);
 uint32_t x175, uint8_t/*bool*/ x176 = addcarryx_u32(x173, x112, x151);
 uint32_t x178, uint8_t/*bool*/ x179 = addcarryx_u32(x176, x115, x154);
 uint32_t x181, uint8_t/*bool*/ x182 = addcarryx_u32(x179, x118, x157);
 uint32_t x184, uint8_t/*bool*/ x185 = addcarryx_u32(x182, x121, x160);
 uint32_t x187, uint8_t/*bool*/ x188 = addcarryx_u32(x185, x122, x163);
 uint32_t x190, uint32_t _ = mulx_u32(x166, 0xffffffff);
 uint32_t x193, uint32_t x194 = mulx_u32(x190, 0xffffffff);
 uint32_t x196, uint32_t x197 = mulx_u32(x190, 0xffffffff);
 uint32_t x199, uint32_t x200 = mulx_u32(x190, 0xffffffff);
 uint32_t x202, uint32_t x203 = mulx_u32(x190, 0xffffffff);
 uint8_t/*bool*/ x204 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x205 = (1&(0x0 + 0x0));
 uint32_t x207, uint8_t/*bool*/ x208 = addcarryx_u32(0x0, x194, x196);
 uint32_t x210, uint8_t/*bool*/ x211 = addcarryx_u32(x208, x197, x199);
 uint32_t x213, uint8_t/*bool*/ x214 = addcarryx_u32(x211, x200, x202);
 uint32_t x216, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x214, x203);
 uint32_t _, uint8_t/*bool*/ x220 = addcarryx_u32(0x0, x166, x190);
 uint32_t x222, uint8_t/*bool*/ x223 = addcarryx_u32(x220, x169, x204);
 uint32_t x225, uint8_t/*bool*/ x226 = addcarryx_u32(x223, x172, x205);
 uint32_t x228, uint8_t/*bool*/ x229 = addcarryx_u32(x226, x175, x193);
 uint32_t x231, uint8_t/*bool*/ x232 = addcarryx_u32(x229, x178, x207);
 uint32_t x234, uint8_t/*bool*/ x235 = addcarryx_u32(x232, x181, x210);
 uint32_t x237, uint8_t/*bool*/ x238 = addcarryx_u32(x235, x184, x213);
 uint32_t x240, uint8_t/*bool*/ x241 = addcarryx_u32(x238, x187, x216);
 uint8_t x242 = ((uint8_t)x241 + x188);
 uint32_t x244, uint32_t x245 = mulx_u32(x9, x17);
 uint32_t x247, uint32_t x248 = mulx_u32(x9, x19);
 uint32_t x250, uint32_t x251 = mulx_u32(x9, x21);
 uint32_t x253, uint32_t x254 = mulx_u32(x9, x23);
 uint32_t x256, uint32_t x257 = mulx_u32(x9, x25);
 uint32_t x259, uint32_t x260 = mulx_u32(x9, x27);
 uint32_t x262, uint32_t x263 = mulx_u32(x9, x26);
 uint32_t x265, uint8_t/*bool*/ x266 = addcarryx_u32(0x0, x245, x247);
 uint32_t x268, uint8_t/*bool*/ x269 = addcarryx_u32(x266, x248, x250);
 uint32_t x271, uint8_t/*bool*/ x272 = addcarryx_u32(x269, x251, x253);
 uint32_t x274, uint8_t/*bool*/ x275 = addcarryx_u32(x272, x254, x256);
 uint32_t x277, uint8_t/*bool*/ x278 = addcarryx_u32(x275, x257, x259);
 uint32_t x280, uint8_t/*bool*/ x281 = addcarryx_u32(x278, x260, x262);
 uint32_t x283, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x281, x263);
 uint32_t x286, uint8_t/*bool*/ x287 = addcarryx_u32(0x0, x222, x244);
 uint32_t x289, uint8_t/*bool*/ x290 = addcarryx_u32(x287, x225, x265);
 uint32_t x292, uint8_t/*bool*/ x293 = addcarryx_u32(x290, x228, x268);
 uint32_t x295, uint8_t/*bool*/ x296 = addcarryx_u32(x293, x231, x271);
 uint32_t x298, uint8_t/*bool*/ x299 = addcarryx_u32(x296, x234, x274);
 uint32_t x301, uint8_t/*bool*/ x302 = addcarryx_u32(x299, x237, x277);
 uint32_t x304, uint8_t/*bool*/ x305 = addcarryx_u32(x302, x240, x280);
 uint32_t x307, uint8_t/*bool*/ x308 = addcarryx_u32(x305, x242, x283);
 uint32_t x310, uint32_t _ = mulx_u32(x286, 0xffffffff);
 uint32_t x313, uint32_t x314 = mulx_u32(x310, 0xffffffff);
 uint32_t x316, uint32_t x317 = mulx_u32(x310, 0xffffffff);
 uint32_t x319, uint32_t x320 = mulx_u32(x310, 0xffffffff);
 uint32_t x322, uint32_t x323 = mulx_u32(x310, 0xffffffff);
 uint8_t/*bool*/ x324 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x325 = (1&(0x0 + 0x0));
 uint32_t x327, uint8_t/*bool*/ x328 = addcarryx_u32(0x0, x314, x316);
 uint32_t x330, uint8_t/*bool*/ x331 = addcarryx_u32(x328, x317, x319);
 uint32_t x333, uint8_t/*bool*/ x334 = addcarryx_u32(x331, x320, x322);
 uint32_t x336, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x334, x323);
 uint32_t _, uint8_t/*bool*/ x340 = addcarryx_u32(0x0, x286, x310);
 uint32_t x342, uint8_t/*bool*/ x343 = addcarryx_u32(x340, x289, x324);
 uint32_t x345, uint8_t/*bool*/ x346 = addcarryx_u32(x343, x292, x325);
 uint32_t x348, uint8_t/*bool*/ x349 = addcarryx_u32(x346, x295, x313);
 uint32_t x351, uint8_t/*bool*/ x352 = addcarryx_u32(x349, x298, x327);
 uint32_t x354, uint8_t/*bool*/ x355 = addcarryx_u32(x352, x301, x330);
 uint32_t x357, uint8_t/*bool*/ x358 = addcarryx_u32(x355, x304, x333);
 uint32_t x360, uint8_t/*bool*/ x361 = addcarryx_u32(x358, x307, x336);
 uint8_t x362 = ((uint8_t)x361 + x308);
 uint32_t x364, uint32_t x365 = mulx_u32(x11, x17);
 uint32_t x367, uint32_t x368 = mulx_u32(x11, x19);
 uint32_t x370, uint32_t x371 = mulx_u32(x11, x21);
 uint32_t x373, uint32_t x374 = mulx_u32(x11, x23);
 uint32_t x376, uint32_t x377 = mulx_u32(x11, x25);
 uint32_t x379, uint32_t x380 = mulx_u32(x11, x27);
 uint32_t x382, uint32_t x383 = mulx_u32(x11, x26);
 uint32_t x385, uint8_t/*bool*/ x386 = addcarryx_u32(0x0, x365, x367);
 uint32_t x388, uint8_t/*bool*/ x389 = addcarryx_u32(x386, x368, x370);
 uint32_t x391, uint8_t/*bool*/ x392 = addcarryx_u32(x389, x371, x373);
 uint32_t x394, uint8_t/*bool*/ x395 = addcarryx_u32(x392, x374, x376);
 uint32_t x397, uint8_t/*bool*/ x398 = addcarryx_u32(x395, x377, x379);
 uint32_t x400, uint8_t/*bool*/ x401 = addcarryx_u32(x398, x380, x382);
 uint32_t x403, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x401, x383);
 uint32_t x406, uint8_t/*bool*/ x407 = addcarryx_u32(0x0, x342, x364);
 uint32_t x409, uint8_t/*bool*/ x410 = addcarryx_u32(x407, x345, x385);
 uint32_t x412, uint8_t/*bool*/ x413 = addcarryx_u32(x410, x348, x388);
 uint32_t x415, uint8_t/*bool*/ x416 = addcarryx_u32(x413, x351, x391);
 uint32_t x418, uint8_t/*bool*/ x419 = addcarryx_u32(x416, x354, x394);
 uint32_t x421, uint8_t/*bool*/ x422 = addcarryx_u32(x419, x357, x397);
 uint32_t x424, uint8_t/*bool*/ x425 = addcarryx_u32(x422, x360, x400);
 uint32_t x427, uint8_t/*bool*/ x428 = addcarryx_u32(x425, x362, x403);
 uint32_t x430, uint32_t _ = mulx_u32(x406, 0xffffffff);
 uint32_t x433, uint32_t x434 = mulx_u32(x430, 0xffffffff);
 uint32_t x436, uint32_t x437 = mulx_u32(x430, 0xffffffff);
 uint32_t x439, uint32_t x440 = mulx_u32(x430, 0xffffffff);
 uint32_t x442, uint32_t x443 = mulx_u32(x430, 0xffffffff);
 uint8_t/*bool*/ x444 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x445 = (1&(0x0 + 0x0));
 uint32_t x447, uint8_t/*bool*/ x448 = addcarryx_u32(0x0, x434, x436);
 uint32_t x450, uint8_t/*bool*/ x451 = addcarryx_u32(x448, x437, x439);
 uint32_t x453, uint8_t/*bool*/ x454 = addcarryx_u32(x451, x440, x442);
 uint32_t x456, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x454, x443);
 uint32_t _, uint8_t/*bool*/ x460 = addcarryx_u32(0x0, x406, x430);
 uint32_t x462, uint8_t/*bool*/ x463 = addcarryx_u32(x460, x409, x444);
 uint32_t x465, uint8_t/*bool*/ x466 = addcarryx_u32(x463, x412, x445);
 uint32_t x468, uint8_t/*bool*/ x469 = addcarryx_u32(x466, x415, x433);
 uint32_t x471, uint8_t/*bool*/ x472 = addcarryx_u32(x469, x418, x447);
 uint32_t x474, uint8_t/*bool*/ x475 = addcarryx_u32(x472, x421, x450);
 uint32_t x477, uint8_t/*bool*/ x478 = addcarryx_u32(x475, x424, x453);
 uint32_t x480, uint8_t/*bool*/ x481 = addcarryx_u32(x478, x427, x456);
 uint8_t x482 = ((uint8_t)x481 + x428);
 uint32_t x484, uint32_t x485 = mulx_u32(x13, x17);
 uint32_t x487, uint32_t x488 = mulx_u32(x13, x19);
 uint32_t x490, uint32_t x491 = mulx_u32(x13, x21);
 uint32_t x493, uint32_t x494 = mulx_u32(x13, x23);
 uint32_t x496, uint32_t x497 = mulx_u32(x13, x25);
 uint32_t x499, uint32_t x500 = mulx_u32(x13, x27);
 uint32_t x502, uint32_t x503 = mulx_u32(x13, x26);
 uint32_t x505, uint8_t/*bool*/ x506 = addcarryx_u32(0x0, x485, x487);
 uint32_t x508, uint8_t/*bool*/ x509 = addcarryx_u32(x506, x488, x490);
 uint32_t x511, uint8_t/*bool*/ x512 = addcarryx_u32(x509, x491, x493);
 uint32_t x514, uint8_t/*bool*/ x515 = addcarryx_u32(x512, x494, x496);
 uint32_t x517, uint8_t/*bool*/ x518 = addcarryx_u32(x515, x497, x499);
 uint32_t x520, uint8_t/*bool*/ x521 = addcarryx_u32(x518, x500, x502);
 uint32_t x523, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x521, x503);
 uint32_t x526, uint8_t/*bool*/ x527 = addcarryx_u32(0x0, x462, x484);
 uint32_t x529, uint8_t/*bool*/ x530 = addcarryx_u32(x527, x465, x505);
 uint32_t x532, uint8_t/*bool*/ x533 = addcarryx_u32(x530, x468, x508);
 uint32_t x535, uint8_t/*bool*/ x536 = addcarryx_u32(x533, x471, x511);
 uint32_t x538, uint8_t/*bool*/ x539 = addcarryx_u32(x536, x474, x514);
 uint32_t x541, uint8_t/*bool*/ x542 = addcarryx_u32(x539, x477, x517);
 uint32_t x544, uint8_t/*bool*/ x545 = addcarryx_u32(x542, x480, x520);
 uint32_t x547, uint8_t/*bool*/ x548 = addcarryx_u32(x545, x482, x523);
 uint32_t x550, uint32_t _ = mulx_u32(x526, 0xffffffff);
 uint32_t x553, uint32_t x554 = mulx_u32(x550, 0xffffffff);
 uint32_t x556, uint32_t x557 = mulx_u32(x550, 0xffffffff);
 uint32_t x559, uint32_t x560 = mulx_u32(x550, 0xffffffff);
 uint32_t x562, uint32_t x563 = mulx_u32(x550, 0xffffffff);
 uint8_t/*bool*/ x564 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x565 = (1&(0x0 + 0x0));
 uint32_t x567, uint8_t/*bool*/ x568 = addcarryx_u32(0x0, x554, x556);
 uint32_t x570, uint8_t/*bool*/ x571 = addcarryx_u32(x568, x557, x559);
 uint32_t x573, uint8_t/*bool*/ x574 = addcarryx_u32(x571, x560, x562);
 uint32_t x576, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x574, x563);
 uint32_t _, uint8_t/*bool*/ x580 = addcarryx_u32(0x0, x526, x550);
 uint32_t x582, uint8_t/*bool*/ x583 = addcarryx_u32(x580, x529, x564);
 uint32_t x585, uint8_t/*bool*/ x586 = addcarryx_u32(x583, x532, x565);
 uint32_t x588, uint8_t/*bool*/ x589 = addcarryx_u32(x586, x535, x553);
 uint32_t x591, uint8_t/*bool*/ x592 = addcarryx_u32(x589, x538, x567);
 uint32_t x594, uint8_t/*bool*/ x595 = addcarryx_u32(x592, x541, x570);
 uint32_t x597, uint8_t/*bool*/ x598 = addcarryx_u32(x595, x544, x573);
 uint32_t x600, uint8_t/*bool*/ x601 = addcarryx_u32(x598, x547, x576);
 uint8_t x602 = ((uint8_t)x601 + x548);
 uint32_t x604, uint32_t x605 = mulx_u32(x15, x17);
 uint32_t x607, uint32_t x608 = mulx_u32(x15, x19);
 uint32_t x610, uint32_t x611 = mulx_u32(x15, x21);
 uint32_t x613, uint32_t x614 = mulx_u32(x15, x23);
 uint32_t x616, uint32_t x617 = mulx_u32(x15, x25);
 uint32_t x619, uint32_t x620 = mulx_u32(x15, x27);
 uint32_t x622, uint32_t x623 = mulx_u32(x15, x26);
 uint32_t x625, uint8_t/*bool*/ x626 = addcarryx_u32(0x0, x605, x607);
 uint32_t x628, uint8_t/*bool*/ x629 = addcarryx_u32(x626, x608, x610);
 uint32_t x631, uint8_t/*bool*/ x632 = addcarryx_u32(x629, x611, x613);
 uint32_t x634, uint8_t/*bool*/ x635 = addcarryx_u32(x632, x614, x616);
 uint32_t x637, uint8_t/*bool*/ x638 = addcarryx_u32(x635, x617, x619);
 uint32_t x640, uint8_t/*bool*/ x641 = addcarryx_u32(x638, x620, x622);
 uint32_t x643, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x641, x623);
 uint32_t x646, uint8_t/*bool*/ x647 = addcarryx_u32(0x0, x582, x604);
 uint32_t x649, uint8_t/*bool*/ x650 = addcarryx_u32(x647, x585, x625);
 uint32_t x652, uint8_t/*bool*/ x653 = addcarryx_u32(x650, x588, x628);
 uint32_t x655, uint8_t/*bool*/ x656 = addcarryx_u32(x653, x591, x631);
 uint32_t x658, uint8_t/*bool*/ x659 = addcarryx_u32(x656, x594, x634);
 uint32_t x661, uint8_t/*bool*/ x662 = addcarryx_u32(x659, x597, x637);
 uint32_t x664, uint8_t/*bool*/ x665 = addcarryx_u32(x662, x600, x640);
 uint32_t x667, uint8_t/*bool*/ x668 = addcarryx_u32(x665, x602, x643);
 uint32_t x670, uint32_t _ = mulx_u32(x646, 0xffffffff);
 uint32_t x673, uint32_t x674 = mulx_u32(x670, 0xffffffff);
 uint32_t x676, uint32_t x677 = mulx_u32(x670, 0xffffffff);
 uint32_t x679, uint32_t x680 = mulx_u32(x670, 0xffffffff);
 uint32_t x682, uint32_t x683 = mulx_u32(x670, 0xffffffff);
 uint8_t/*bool*/ x684 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x685 = (1&(0x0 + 0x0));
 uint32_t x687, uint8_t/*bool*/ x688 = addcarryx_u32(0x0, x674, x676);
 uint32_t x690, uint8_t/*bool*/ x691 = addcarryx_u32(x688, x677, x679);
 uint32_t x693, uint8_t/*bool*/ x694 = addcarryx_u32(x691, x680, x682);
 uint32_t x696, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x694, x683);
 uint32_t _, uint8_t/*bool*/ x700 = addcarryx_u32(0x0, x646, x670);
 uint32_t x702, uint8_t/*bool*/ x703 = addcarryx_u32(x700, x649, x684);
 uint32_t x705, uint8_t/*bool*/ x706 = addcarryx_u32(x703, x652, x685);
 uint32_t x708, uint8_t/*bool*/ x709 = addcarryx_u32(x706, x655, x673);
 uint32_t x711, uint8_t/*bool*/ x712 = addcarryx_u32(x709, x658, x687);
 uint32_t x714, uint8_t/*bool*/ x715 = addcarryx_u32(x712, x661, x690);
 uint32_t x717, uint8_t/*bool*/ x718 = addcarryx_u32(x715, x664, x693);
 uint32_t x720, uint8_t/*bool*/ x721 = addcarryx_u32(x718, x667, x696);
 uint8_t x722 = ((uint8_t)x721 + x668);
 uint32_t x724, uint32_t x725 = mulx_u32(x14, x17);
 uint32_t x727, uint32_t x728 = mulx_u32(x14, x19);
 uint32_t x730, uint32_t x731 = mulx_u32(x14, x21);
 uint32_t x733, uint32_t x734 = mulx_u32(x14, x23);
 uint32_t x736, uint32_t x737 = mulx_u32(x14, x25);
 uint32_t x739, uint32_t x740 = mulx_u32(x14, x27);
 uint32_t x742, uint32_t x743 = mulx_u32(x14, x26);
 uint32_t x745, uint8_t/*bool*/ x746 = addcarryx_u32(0x0, x725, x727);
 uint32_t x748, uint8_t/*bool*/ x749 = addcarryx_u32(x746, x728, x730);
 uint32_t x751, uint8_t/*bool*/ x752 = addcarryx_u32(x749, x731, x733);
 uint32_t x754, uint8_t/*bool*/ x755 = addcarryx_u32(x752, x734, x736);
 uint32_t x757, uint8_t/*bool*/ x758 = addcarryx_u32(x755, x737, x739);
 uint32_t x760, uint8_t/*bool*/ x761 = addcarryx_u32(x758, x740, x742);
 uint32_t x763, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x761, x743);
 uint32_t x766, uint8_t/*bool*/ x767 = addcarryx_u32(0x0, x702, x724);
 uint32_t x769, uint8_t/*bool*/ x770 = addcarryx_u32(x767, x705, x745);
 uint32_t x772, uint8_t/*bool*/ x773 = addcarryx_u32(x770, x708, x748);
 uint32_t x775, uint8_t/*bool*/ x776 = addcarryx_u32(x773, x711, x751);
 uint32_t x778, uint8_t/*bool*/ x779 = addcarryx_u32(x776, x714, x754);
 uint32_t x781, uint8_t/*bool*/ x782 = addcarryx_u32(x779, x717, x757);
 uint32_t x784, uint8_t/*bool*/ x785 = addcarryx_u32(x782, x720, x760);
 uint32_t x787, uint8_t/*bool*/ x788 = addcarryx_u32(x785, x722, x763);
 uint32_t x790, uint32_t _ = mulx_u32(x766, 0xffffffff);
 uint32_t x793, uint32_t x794 = mulx_u32(x790, 0xffffffff);
 uint32_t x796, uint32_t x797 = mulx_u32(x790, 0xffffffff);
 uint32_t x799, uint32_t x800 = mulx_u32(x790, 0xffffffff);
 uint32_t x802, uint32_t x803 = mulx_u32(x790, 0xffffffff);
 uint8_t/*bool*/ x804 = (1&(0x0 + 0x0));
 uint8_t/*bool*/ x805 = (1&(0x0 + 0x0));
 uint32_t x807, uint8_t/*bool*/ x808 = addcarryx_u32(0x0, x794, x796);
 uint32_t x810, uint8_t/*bool*/ x811 = addcarryx_u32(x808, x797, x799);
 uint32_t x813, uint8_t/*bool*/ x814 = addcarryx_u32(x811, x800, x802);
 uint32_t x816, uint8_t/*bool*/ _ = addcarryx_u32(0x0, x814, x803);
 uint32_t _, uint8_t/*bool*/ x820 = addcarryx_u32(0x0, x766, x790);
 uint32_t x822, uint8_t/*bool*/ x823 = addcarryx_u32(x820, x769, x804);
 uint32_t x825, uint8_t/*bool*/ x826 = addcarryx_u32(x823, x772, x805);
 uint32_t x828, uint8_t/*bool*/ x829 = addcarryx_u32(x826, x775, x793);
 uint32_t x831, uint8_t/*bool*/ x832 = addcarryx_u32(x829, x778, x807);
 uint32_t x834, uint8_t/*bool*/ x835 = addcarryx_u32(x832, x781, x810);
 uint32_t x837, uint8_t/*bool*/ x838 = addcarryx_u32(x835, x784, x813);
 uint32_t x840, uint8_t/*bool*/ x841 = addcarryx_u32(x838, x787, x816);
 uint8_t x842 = ((uint8_t)x841 + x788);
 uint32_t x844, uint8_t/*bool*/ x845 = subborrow_u32(0x0, x822, 0x1);
 uint32_t x847, uint8_t/*bool*/ x848 = subborrow_u32(x845, x825, 0x0);
 uint32_t x850, uint8_t/*bool*/ x851 = subborrow_u32(x848, x828, 0x0);
 uint32_t x853, uint8_t/*bool*/ x854 = subborrow_u32(x851, x831, 0xffffffff);
 uint32_t x856, uint8_t/*bool*/ x857 = subborrow_u32(x854, x834, 0xffffffff);
 uint32_t x859, uint8_t/*bool*/ x860 = subborrow_u32(x857, x837, 0xffffffff);
 uint32_t x862, uint8_t/*bool*/ x863 = subborrow_u32(x860, x840, 0xffffffff);
 uint32_t _, uint8_t/*bool*/ x866 = subborrow_u32(x863, x842, 0x0);
 uint32_t x867 = cmovznz32(x866, x862, x840);
 uint32_t x868 = cmovznz32(x866, x859, x837);
 uint32_t x869 = cmovznz32(x866, x856, x834);
 uint32_t x870 = cmovznz32(x866, x853, x831);
 uint32_t x871 = cmovznz32(x866, x850, x828);
 uint32_t x872 = cmovznz32(x866, x847, x825);
 uint32_t x873 = cmovznz32(x866, x844, x822);
 return (x867, x868, x869, x870, x871, x872, x873))
(x, x0)%core
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 → word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
