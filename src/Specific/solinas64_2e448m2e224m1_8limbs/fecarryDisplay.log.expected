λ x : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x13, x14, x12, x10, x8, x6, x4, x2)%core,
 uint64_t x15 = (x8 >> 0x38);
 uint64_t x16 = (x8 & 0xffffffffffffff);
 uint64_t x17 = (x13 >> 0x38);
 uint64_t x18 = (x13 & 0xffffffffffffff);
 uint64_t x19 = ((0x100000000000000 * x17) + x18);
 uint64_t x20 = (x19 >> 0x38);
 uint64_t x21 = (x19 & 0xffffffffffffff);
 uint64_t x22 = ((x15 + x10) + x20);
 uint64_t x23 = (x22 >> 0x38);
 uint64_t x24 = (x22 & 0xffffffffffffff);
 uint64_t x25 = (x2 + x20);
 uint64_t x26 = (x25 >> 0x38);
 uint64_t x27 = (x25 & 0xffffffffffffff);
 uint64_t x28 = (x23 + x12);
 uint64_t x29 = (x28 >> 0x38);
 uint64_t x30 = (x28 & 0xffffffffffffff);
 uint64_t x31 = (x26 + x4);
 uint64_t x32 = (x31 >> 0x38);
 uint64_t x33 = (x31 & 0xffffffffffffff);
 uint64_t x34 = (x29 + x14);
 uint64_t x35 = (x34 >> 0x38);
 uint64_t x36 = (x34 & 0xffffffffffffff);
 uint64_t x37 = (x32 + x6);
 uint64_t x38 = (x37 >> 0x38);
 uint64_t x39 = (x37 & 0xffffffffffffff);
 uint64_t x40 = (x35 + x21);
 uint64_t x41 = (x40 >> 0x38);
 uint64_t x42 = (x40 & 0xffffffffffffff);
 uint64_t x43 = (x38 + x16);
 uint64_t x44 = (x43 >> 0x38);
 uint64_t x45 = (x43 & 0xffffffffffffff);
 uint64_t x46 = ((0x100000000000000 * x41) + x42);
 uint64_t x47 = (x46 >> 0x38);
 uint64_t x48 = (x46 & 0xffffffffffffff);
 uint64_t x49 = ((x44 + x24) + x47);
 uint64_t x50 = (x49 >> 0x38);
 uint64_t x51 = (x49 & 0xffffffffffffff);
 uint64_t x52 = (x27 + x47);
 uint64_t x53 = (x52 >> 0x38);
 uint64_t x54 = (x52 & 0xffffffffffffff);
 return (Return x48, Return x36, (x50 + x30), Return x51, Return x45, Return x39, (x53 + x33), Return x54))
x
     : word64 * word64 * word64 * word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
