λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x19, x20, x18, x16, x14, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x22, uint8_t/*bool*/ x23 = subborrow_u26(0x0, x2, 0x3fffff7);
 uint32_t x25, uint8_t/*bool*/ x26 = subborrow_u26(x23, x4, 0x3ffffff);
 uint32_t x28, uint8_t/*bool*/ x29 = subborrow_u26(x26, x6, 0x3ffffff);
 uint32_t x31, uint8_t/*bool*/ x32 = subborrow_u26(x29, x8, 0x3ffffff);
 uint32_t x34, uint8_t/*bool*/ x35 = subborrow_u26(x32, x10, 0x3ffffff);
 uint32_t x37, uint8_t/*bool*/ x38 = subborrow_u26(x35, x12, 0x3ffffff);
 uint32_t x40, uint8_t/*bool*/ x41 = subborrow_u26(x38, x14, 0x3ffffff);
 uint32_t x43, uint8_t/*bool*/ x44 = subborrow_u26(x41, x16, 0x3ffffff);
 uint32_t x46, uint8_t/*bool*/ x47 = subborrow_u26(x44, x18, 0x3ffffff);
 uint32_t x49, uint8_t/*bool*/ x50 = subborrow_u26(x47, x20, 0x3ffffff);
 uint32_t x52, uint8_t/*bool*/ x53 = subborrow_u25(x50, x19, 0x1ffffff);
 uint32_t x54 = cmovznz32(x53, 0x0, 0xffffffff);
 uint32_t x55 = (x54 & 0x3fffff7);
 uint32_t x57, uint8_t/*bool*/ x58 = addcarryx_u26(0x0, x22, x55);
 uint32_t x59 = (x54 & 0x3ffffff);
 uint32_t x61, uint8_t/*bool*/ x62 = addcarryx_u26(x58, x25, x59);
 uint32_t x63 = (x54 & 0x3ffffff);
 uint32_t x65, uint8_t/*bool*/ x66 = addcarryx_u26(x62, x28, x63);
 uint32_t x67 = (x54 & 0x3ffffff);
 uint32_t x69, uint8_t/*bool*/ x70 = addcarryx_u26(x66, x31, x67);
 uint32_t x71 = (x54 & 0x3ffffff);
 uint32_t x73, uint8_t/*bool*/ x74 = addcarryx_u26(x70, x34, x71);
 uint32_t x75 = (x54 & 0x3ffffff);
 uint32_t x77, uint8_t/*bool*/ x78 = addcarryx_u26(x74, x37, x75);
 uint32_t x79 = (x54 & 0x3ffffff);
 uint32_t x81, uint8_t/*bool*/ x82 = addcarryx_u26(x78, x40, x79);
 uint32_t x83 = (x54 & 0x3ffffff);
 uint32_t x85, uint8_t/*bool*/ x86 = addcarryx_u26(x82, x43, x83);
 uint32_t x87 = (x54 & 0x3ffffff);
 uint32_t x89, uint8_t/*bool*/ x90 = addcarryx_u26(x86, x46, x87);
 uint32_t x91 = (x54 & 0x3ffffff);
 uint32_t x93, uint8_t/*bool*/ x94 = addcarryx_u26(x90, x49, x91);
 uint32_t x95 = (x54 & 0x1ffffff);
 uint32_t x97, uint8_t/*bool*/ _ = addcarryx_u25(x94, x52, x95);
 (Return x97, Return x93, Return x89, Return x85, Return x81, Return x77, Return x73, Return x69, Return x65, Return x61, Return x57))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
